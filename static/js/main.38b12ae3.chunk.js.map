{"version":3,"sources":["components/Logo/anime.png","components/Navigation/Navigation.js","components/Logo/Logo.js","components/Signin/Signin.js","components/Register/Register.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","components/FaceRecognition/FaceRecognition.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","onRouteChange","navStyle","display","justifyContent","marginRight","isSignedIn","style","onClick","className","Logo","options","max","height","width","src","anime","alt","Signin","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","id","loadUser","this","htmlFor","type","name","onChange","React","Component","Register","onNameChange","ImageLinkForm","onInputChange","onSubmit","size","Rank","entries","FaceRecognition","imageURL","box","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","particlesOptions","particles","line_linked","shadow","enable","color","number","density","value_area","interactivity","events","onhover","mode","initialState","input","route","joined","App","data","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","onPictureSubmit","count","Object","assign","catch","console","log","err","params","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.38b12ae3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/anime.17bdb77a.png\";","import React from 'react'\r\n\r\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\r\n  const navStyle = {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n    marginRight: \"20px\"\r\n  }\r\n\r\n  if(isSignedIn) {\r\n    return (\r\n      <nav style={navStyle}>\r\n        <h1 onClick={() => onRouteChange('signout')} className=\"f3 link underline pa3 pointer\">Sign Out</h1>\r\n      </nav>\r\n    );\r\n  } else {\r\n    return (\r\n      <nav style={navStyle}>\r\n        <h1 onClick={() => onRouteChange('signin')} className=\"f3 link underline pa3 pointer\">Sign In</h1>\r\n        <h1 onClick={() => onRouteChange('register')} className=\"f3 link underline pa3 pointer\">Register</h1>\r\n      </nav>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default Navigation","import React from 'react'\r\nimport Tilt from 'react-tilt'\r\nimport anime from './anime.png'\r\nimport './Logo.css'\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <div className=\"logo ma4 mt0\">\r\n      <Tilt className=\"Tilt br2 shadow-2\" options={{ max : 40 }} style={{ height: 220, width: 220 }} >\r\n        <div className=\"Tilt-inner\">\r\n          <img src={anime} alt=\"logo\"/>\r\n        </div>\r\n      </Tilt>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Logo","import React from 'react'\r\n\r\nclass Signin extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      signInEmail: '',\r\n      signInPassword: ''\r\n    }\r\n  }\r\n  onEmailChange = (event) => {\r\n    this.setState({signInEmail: event.target.value})\r\n  }\r\n\r\n  onPasswordChange = (event) => {\r\n    this.setState({ signInPassword: event.target.value })\r\n  }\r\n\r\n  onSubmitSignIn = () => {\r\n    fetch('https://shrouded-springs-58727.herokuapp.com/signin', {\r\n      method: 'post',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n        email: this.state.signInEmail,\r\n        password: this.state.signInPassword\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(user => {\r\n        if(user.id) {\r\n          this.props.loadUser(user)\r\n          this.props.onRouteChange('home');\r\n        }\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const { onRouteChange } = this.props;\r\n    return (\r\n      <div>\r\n        <article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n          <main className=\"pa4 black-80\">\r\n            <div className=\"measure\">\r\n              <fieldset id=\"sign_up\" className=\"center ba b--transparent ph0 mh0\">\r\n                <legend className=\"center f2 fw6 ph0 mh0\">Sign In</legend>\r\n                <div className=\"mt3\">\r\n                  <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                  <input \r\n                    className=\"pa2 input-reset ba bg-transparent hover-bg-white hover-black w-100\" \r\n                    type=\"email\" \r\n                    name=\"email-address\"  \r\n                    id=\"email-address\" \r\n                    onChange={this.onEmailChange}\r\n                  />\r\n                </div>\r\n                <div className=\"mv3\">\r\n                  <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                  <input \r\n                    className=\"b pa2 input-reset ba bg-transparent hover-bg-white hover-black w-100\" \r\n                    type=\"password\" \r\n                    name=\"password\" \r\n                    id=\"password\" \r\n                    onChange={this.onPasswordChange}\r\n                  />\r\n                </div>\r\n              </fieldset>\r\n              <div className=\"center\">\r\n                <input \r\n                  className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n                  type=\"submit\" \r\n                  value=\"Sign in\"\r\n                  onClick={this.onSubmitSignIn} \r\n                />\r\n              </div>\r\n              <div className=\"lh-copy mt3\">\r\n                <p onClick={() => onRouteChange('register')} className=\"f6 link dim black db pointer\">Register</p>\r\n              </div>\r\n            </div> \r\n          </main>\r\n        </article>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Signin","import React from 'react'\r\n\r\nclass Register extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      name: ''\r\n    }\r\n  }\r\n\r\n  onNameChange = (event) => {\r\n    this.setState({ name: event.target.value })\r\n  }\r\n\r\n  onEmailChange = (event) => {\r\n    this.setState({email: event.target.value})\r\n  }\r\n\r\n  onPasswordChange = (event) => {\r\n    this.setState({ password: event.target.value })\r\n  }\r\n\r\n  onSubmitSignIn = () => {\r\n    fetch('https://shrouded-springs-58727.herokuapp.com/register', {\r\n      method: 'post',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n        name: this.state.name\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(user => {\r\n        if(user.id) {\r\n          this.props.loadUser(user)\r\n          this.props.onRouteChange('home');\r\n        }\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n          <main className=\"pa4 black-80\">\r\n            <div className=\"measure\">\r\n              <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                <legend className=\"f2 center fw6 ph0 mh0\">Register</legend>\r\n                <div className=\"mt3\">\r\n                  <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n                  <input \r\n                    className=\"pa2 input-reset ba bg-transparent hover-bg-white hover-black w-100\" \r\n                    type=\"text\" \r\n                    name=\"name\" \r\n                    onChange={this.onNameChange}\r\n                  />\r\n                </div>\r\n                <div className=\"mt3\">\r\n                  <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                  <input \r\n                    className=\"pa2 input-reset ba bg-transparent hover-bg-white hover-black w-100\" \r\n                    type=\"email\" \r\n                    name=\"email-address\" \r\n                    id=\"email-address\" \r\n                    onChange={this.onEmailChange}\r\n                />\r\n                </div>\r\n                <div className=\"mv3\">\r\n                  <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                  <input \r\n                    className=\"b pa2 input-reset ba bg-transparent hover-bg-white hover-black w-100\" \r\n                    type=\"password\" \r\n                    name=\"password\" \r\n                    id=\"password\" \r\n                    onChange={this.onPasswordChange}\r\n                  />\r\n                </div>\r\n              </fieldset>\r\n              <div>\r\n                <input \r\n                  className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n                  type=\"submit\" \r\n                  value=\"Register\"\r\n                  onClick={this.onSubmitSignIn} \r\n                />\r\n              </div>\r\n            </div> \r\n          </main>\r\n        </article>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default Register","import React from 'react'\r\nimport './ImageLinkForm.css'\r\n\r\nconst ImageLinkForm = ({ onInputChange, onSubmit }) => {\r\n  return (\r\n    <div className=\"hero1\">\r\n      <p className=\"f3\">\r\n        {'This Magic Brain will detect faces in your pictures. Give it a try'}\r\n      </p>\r\n      <p>Enter an image URL</p>\r\n      <div className=\"textBox\">\r\n        <input \r\n          className=\"textBox2\" \r\n          type=\"text\" \r\n          size=\"50\"\r\n          onChange={onInputChange}\r\n        />\r\n        <button \r\n          className=\"button grow link dib white\"\r\n          onClick={onSubmit}\r\n        >Detect\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default ImageLinkForm","import React from 'react'\r\nimport './Rank.css'\r\n\r\nconst Rank = ({ name, entries }) => {\r\n  return (\r\n    <div className=\"hero\">\r\n      <div className=\"white f3\">\r\n        {`${name}, your current entries is...`}\r\n      </div>\r\n      <div className=\"white\">\r\n        <h1>{entries}</h1>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Rank","import React from 'react'\r\nimport './FaceRecognition.css'\r\n\r\nconst FaceRecognition = ({ imageURL, box }) => {\r\n  return (\r\n    <div className='center'>\r\n      <div className='absolute mt2'>\r\n        <img id='inputimage' src={imageURL} alt='' width=\"500px\" height=\"auto\" />\r\n        <div \r\n          className=\"bounding-box\"\r\n          style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}\r\n          ></div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default FaceRecognition","import React, { Component } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm'\nimport Rank from './components/Rank/Rank'\nimport Particles from 'react-particles-js'\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition'\nimport './App.css'\n\nconst particlesOptions = {\n  particles: {\n    line_linked: {\n      shadow: {\n        enable: true,\n        color: \"#00FF00\"\n      }\n    },\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 200\n      }\n    },\n    size: {\n      value: 6\n    }\n},\n  interactivity: {\n    events: {\n      onhover: {\n        enable: true,\n        mode: \"repulse\"\n      }\n    }\n  }\n}\n\nconst initialState = {\n  input: '',\n  imageURL: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      input: '',\n      imageURL: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    }\n  }\n\n  loadUser = (data) => {\n    this.setState({\n      user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined\n      }\n    })\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({box: box});\n  }\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value })\n  }\n\n  onPictureSubmit = () => {\n    this.setState({ imageURL: this.state.input });\n    fetch('https://shrouded-springs-58727.herokuapp.com/imageurl', {\n      method: 'post',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        input: this.state.input\n      })\n    })\n    .then(response => response.json())\n    .then(response => {\n      if(response) {\n        fetch('https://shrouded-springs-58727.herokuapp.com/image', {\n          method: 'put',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify({\n            id: this.state.user.id\n          })\n        })\n        .then(response => response.json())\n        .then(count => {\n          this.setState(Object.assign(this.state.user, { entries: count }))\n        })\n        .catch(console.log)\n      }\n      this.displayFaceBox(this.calculateFaceLocation(response))\n    })\n    .catch(err => console.log(err));\n  }\n\n  onRouteChange = (route) => {\n    if(route === 'signout') {\n      this.setState(initialState)\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({ route: route })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Particles className=\"particles\"\n          params={particlesOptions}\n        />\n        <Navigation isSignedIn={this.state.isSignedIn} onRouteChange={this.onRouteChange} />\n        { this.state.route === 'home' \n          ? <div>\n              <Logo />\n              <Rank \n                name={this.state.user.name} \n                entries={this.state.user.entries}  \n              />\n              <ImageLinkForm \n                onInputChange={this.onInputChange} \n                onSubmit={this.onPictureSubmit}\n              />\n              <FaceRecognition box={this.state.box} imageURL={this.state.imageURL} />\n            </div>\n          : (\n            this.state.route === 'signin'\n            ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n            : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n          )\n        }\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\nimport 'tachyons'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}